def:headX,5
def:headY,5
def:move,''
def:segments,2
def:segX1,4
def:segY1,5
def:segX2,3
def:segY2,5

def:appleX,7
def:appleY,3

def:appleSegment,0

mark:start loop
    m:move=input
    ifNotGotoMarker>start loop:r:(move=='w') or r:(move=='a') or r:(move=='s') or r:(move=='d')
    def:segCheck,segments
    m:segCheck+1
    unmark:loopSegments_1
    mark:loopSegments_1
        def:segX_1,'segX'
        def:segX_2,'segX'
        def:segY_1,'segY'
        def:segY_2,'segY'
        m:segX_1+segCheck
        m:segY_1+segCheck
        segCheck--
        m:segX_2+segCheck
        m:segY_2+segCheck
        def:placeholderX,headX
        def:placeholderY,headY
        ifSkip>3:r:(segCheck==0)
            m:placeholderX=%segX_2
            m:placeholderY=%segY_2
        ifNotSkip>7:r:(%segX_1==placeholderX) and r:(%segY_1==placeholderY)
            say:''
            say:''
            say:''
            saynl:'Your score:'
            sayAndParse:segments
            gotoEnd
        ifNotSkip>7:r:(%segX_2==headX) and r:(%segY_2==headY)
            say:''
            say:''
            say:''
            saynl:'Your score:'
            sayAndParse:segments
            gotoEnd
        m:%segX_1=placeholderX
        m:%segY_1=placeholderY
		destroy:placeholderX
		destroy:placeholderY
		destroy:segX_1
		destroy:segX_2
		destroy:segY_1
		destroy:segY_2
    ifGotoMarker>loopSegments_1:r:(segCheck>0)
    destroy:segCheck

    ifNotSkip>2:r:(move=='d')
        headY++
    ifNotSkip>2:r:(move=='a')
        headY--
    ifNotSkip>2:r:(move=='w')
        headX--
    ifNotSkip>2:r:(move=='s')
        headX++
    ifNotSkip>2:r:(move=='end')
        gotoEnd

    def:x_loop,0
    unmark:start_loop_print_x
    say:''
    say:''
    say:''
    mark:start_loop_print_x
        def:y_loop,0
            unmark:start_loop_print_Y
            mark:start_loop_print_Y
                unmark:else
                ifGotoMarker>else:r:(x_loop==headX) and r:(y_loop==headY)
                    def:segCheck,1
                    def:segmentsInTile,0
                    unmark:loopSegments
                    mark:loopSegments
                        def:segX,'segX'
                        def:segY,'segY'
                        m:segX+segCheck
                        m:segY+segCheck
                        ifNotSkip>11:r:(%segX==x_loop) and r:(%segY==y_loop)
                            ifSkip>10:r:(segmentsInTile>=1)
                                ifSkip>6:r:(appleX==x_loop) and r:(appleY==y_loop)
                                    ifNotSkip>3:r:(segCheck==segments)
                                        saynl:'c '
                                    skip:2
                                        saynl:'o '
                                skip:3
                                    saynl:'0 '
                                    m:appleSegment=segCheck
                            segmentsInTile++
                        segCheck++
                    ifGotoMarker>loopSegments:r:(segCheck<=segments)
                    destroy:segCheck
                    ifSkip>5:r:(segmentsInTile>=1)
                        ifSkip>3:r:(appleX==x_loop) and r:(appleY==y_loop)
                            saynl:'_ '
                        skip:2
                            saynl:'a '
                    destroy:segmentsInTile
                skip:3
                mark:else
                    saynl:'O '
            m:y_loop+1
            ifGotoMarker>start_loop_print_Y:r:(y_loop<=10)
        destroy:y_loop
        m:x_loop+1
        say:''
    ifGotoMarker>start_loop_print_x:r:(x_loop<=10)
    destroy:x_loop

    def:prevAppleSegment,appleSegment
    def:prevLength,segments
    def:appleSegX,'segX'
    def:appleSegY,'segY'
    m:appleSegX+appleSegment
    m:appleSegY+appleSegment
    ifNotGotoMarker>end_create_segment:r:(%appleSegX==appleX) and r:(%appleSegY==appleY) and r:(appleSegment==segments)
        m:appleSegment+1
        def:newSegX,'segX'
        def:newSegY,'segY'
        m:newSegX+%appleSegment
        m:newSegY+%appleSegment
        def:%newSegX,%appleX
        def:%newSegY,%appleY
        m:segments+1
        def:rand1,rand=0:10
        def:rand2,rand=0:10
        m:appleX=rand1
        m:appleY=rand2
        destroy:rand1
        destroy:rand2
        m:appleSegment=0
        destroy:newSegX
        destroy:newSegY
    unmark:end_create_segment
    mark:end_create_segment
    destroy:appleSegX
    destroy:appleSegY

    ifSkip>9:r:(prevAppleSegment==0)
        saynl:'Apple in segment:'
        ifNotSkip>3:r:(appleSegment<prevAppleSegment)
            sayAndParsenl:prevAppleSegment
        skip:2
            sayAndParsenl:appleSegment
        saynl:' of '
        sayAndParse:prevLength
    skip:4
        saynl:'Apple is not in snake, '
        sayAndParsenl:prevLength
        say:' segments.'
    destroy:prevAppleSegment
    destroy:prevLength
gotoMark:start loop